---
groups:
- name: test-and-release
  jobs:
  - bump-deps
  - test-unit
  - publish-multidigest-binary

- name: docker-images
  jobs:
  - build-go-dep-bumper
  - build-bosh-utils-image

- name: all
  jobs:
  - test-unit
  - publish-multidigest-binary
  - build-go-dep-bumper
  - build-bosh-utils-image
  - bump-deps

jobs:
  - name: bump-deps
    public: true
    plan:
      - in_parallel:
        - get: weekly
          trigger: true
        - get: bosh-utils
        - get: golang-release
      - task: bump-deps
        file: golang-release/ci/tasks/shared/bump-deps.yml
        input_mapping:
          input_repo: bosh-utils
        output_mapping:
          output_repo: bumped-bosh-utils
      - task: test-unit
        input_mapping:
          bosh-utils: bumped-bosh-utils
        file: bosh-utils/ci/tasks/test-unit.yml
      - task: test-unit-windows
        input_mapping:
          bosh-utils: bumped-bosh-utils
        file: bosh-utils/ci/tasks/test-unit-windows.yml
        tags:
          - windows-nimbus
      - put: bosh-utils
        params:
          repository: bumped-bosh-utils

  - name: test-unit
    public: true
    plan:
      - get: bosh-utils
        trigger: true
      - get: version-semver
        params: {bump: patch}
      - in_parallel:
        - task: test-unit
          file: bosh-utils/ci/tasks/test-unit.yml
        - task: test-unit-windows
          file: bosh-utils/ci/tasks/test-unit-windows.yml
          tags:
            - windows-nimbus
      - put: bosh-utils-commit-status
        params:
          state: success
          commit: bosh-utils
      - put: bosh-utils-promoted
        params:
          repository: bosh-utils
          tag_prefix: "v"
          tag: version-semver/version
      - put: version-semver
        params: { file: version-semver/version }

  - name: publish-multidigest-binary
    public: true
    plan:
      - get: bosh-utils
        trigger: true
        passed: [test-unit]
      - get: version-semver
        passed: [test-unit]
      - in_parallel:
        - task: build-multidigest-binary-darwin
          file: bosh-utils/ci/tasks/build-multidigest-binary.yml
          output_mapping: { out: compiled-darwin }
          params:
            GOOS: darwin
            GOARCH: amd64
        - task: build-multidigest-binary-linux
          file: bosh-utils/ci/tasks/build-multidigest-binary.yml
          output_mapping: { out: compiled-linux }
          params:
            GOOS: linux
            GOARCH: amd64
        - task: build-multidigest-binary-linux-ppc64le
          file: bosh-utils/ci/tasks/build-multidigest-binary.yml
          output_mapping: { out: compiled-linux-ppc64le }
          params:
            GOOS: linux
            GOARCH: ppc64le
      - in_parallel:
        - put: release-bucket-linux
          params: {file: compiled-linux/verify-multidigest-*-linux-amd64}
        - put: release-bucket-darwin
          params: {file: compiled-darwin/verify-multidigest-*-darwin-amd64}
        - put: release-bucket-linux-ppc64le
          params: {file: compiled-linux-ppc64le/verify-multidigest-*-linux-ppc64le}

  - name: build-bosh-utils-image
    public: true
    plan:
      - get: bosh-utils-dockerfiles
        trigger: true
      - get: image-weekly
        trigger: true
      - put: bosh-utils-image
        params:
          build: "bosh-utils-dockerfiles/ci/docker/bosh-utils"
        get_params:
          skip_download: true

  - name: build-go-dep-bumper
    public: true
    plan:
      - get: bosh-utils-dockerfiles
        trigger: true
      - put: go-dep-bumper
        params:
          build: "bosh-utils-dockerfiles/ci/docker/go-dep-bumper"
        get_params:
          skip_download: true

resources:
  - name: weekly
    type: time
    source:
      start: 3:00 -0700
      stop: 4:30 -0700
      days: [Saturday]

  - name: image-weekly
    type: time
    source:
      start: 3:00 -0700
      stop: 4:30 -0700
      days: [ Friday ]

  - name: bosh-utils
    type: git
    source:
      uri: git@github.com:cloudfoundry/bosh-utils.git
      branch: develop
      private_key: ((github_deploy_key_bosh-utils.private_key))

  - name: bosh-utils-promoted
    type: git
    source:
      uri: git@github.com:cloudfoundry/bosh-utils.git
      branch: master
      private_key: ((github_deploy_key_bosh-utils.private_key))

  - name: bosh-utils-commit-status
    type: github-status
    source:
      repository: cloudfoundry/bosh-utils
      access_token: ((github_read_write_token))
      branch: develop
      context: ci/unit-tests

  - name: bosh-utils-dockerfiles
    type: git
    source:
      uri: git@github.com:cloudfoundry/bosh-utils.git
      branch: develop
      private_key: ((github_deploy_key_bosh-utils.private_key))
      paths:
      - "ci/docker"

  - name: golang-release
    type: git
    source:
      uri: https://github.com/bosh-packages/golang-release.git

  - name: release-bucket-darwin
    type: s3
    source:
      regexp: verify-multidigest-(.*)-darwin-amd64
      bucket: verify-multidigest
      region_name: us-east-1
      access_key_id: ((bosh-verify-multidigest-upload_aws_access_key.username))
      secret_access_key: ((bosh-verify-multidigest-upload_aws_access_key.password))

  - name: release-bucket-linux
    type: s3
    source:
      regexp: verify-multidigest-(.*)-linux-amd64
      bucket: verify-multidigest
      region_name: us-east-1
      access_key_id: ((bosh-verify-multidigest-upload_aws_access_key.username))
      secret_access_key: ((bosh-verify-multidigest-upload_aws_access_key.password))

  - name: release-bucket-linux-ppc64le
    type: s3
    source:
      regexp: verify-multidigest-(.*)-linux-ppc64le
      bucket: verify-multidigest
      region_name: us-east-1
      access_key_id: ((bosh-verify-multidigest-upload_aws_access_key.username))
      secret_access_key: ((bosh-verify-multidigest-upload_aws_access_key.password))

  - name: version-semver
    type: semver
    source:
      initial_version: 0.0.1
      key: verify-multidigest-current-version
      bucket: verify-multidigest
      access_key_id: ((bosh-verify-multidigest-upload_aws_access_key.username))
      secret_access_key: ((bosh-verify-multidigest-upload_aws_access_key.password))

  - name: bosh-utils-image
    type: docker-image
    source:
      repository: bosh/utils
      username: ((docker.username))
      password: ((docker.password))

  - name: go-dep-bumper
    type: docker-image
    source:
      repository: bosh/go-dep-bumper
      username: ((docker.username))
      password: ((docker.password))

resource_types:
  - name: github-status
    type: docker-image
    source:
      repository: dpb587/github-status-resource
      tag: master
